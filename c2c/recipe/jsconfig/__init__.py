# -*- coding: utf-8 -*-
# buildout recipe for js configuration

import os

class Recipe(object):
    def __init__(self, buildout, name, options):
        basedir = buildout['buildout']['directory']
        self.output = os.path.join(basedir, options['output'])
        self.namespace = options['namespace']
        # get config from extended sections
        self.config = {}
        for key, value in options.items():
            if key not in ['recipe', 'output', 'namespace']:
                self.config[key] = value

    def install(self):
        outputdir = os.path.dirname(self.output)
        if not os.path.exists(outputdir):
            os.makedirs(outputdir)
        output = open(self.output, 'w')
        output.write("""
/**
 * This file has been generated by c2c.recipe.jsconfig
 * buildout recipe.
 */

Ext.namespace(\'%(namespace)s\');

/**
 * Constructor: %(namespace)s.Config
 * Creates a configuration object (read only).
 */
%(namespace)s.Config = function() {
    return {

%(options)s

    }
}();
"""
                     % {
                         'namespace': self.namespace,
                         'options': ',\n\n'.join(
                             ["        %s: %s" % i \
                              for i in self.config.items()]
                         )
                     }
                    )
        output.close()

        return self.output


    update = install

